name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      DATABASE_FILE: film.sqlite

    steps:
      - name: Repository auschecken
        uses: actions/checkout@v2

      - name: Node.js einrichten
        uses: actions/setup-node@v2
        with:
          node-version: '20'

      - name: .env Datei erstellen
        run: |
          echo "DATABASE_FILE=film.sqlite" >> .env

      - name: SQLite-Datenbank überprüfen
        run: |
          if sqlite3 film.sqlite "SELECT name FROM sqlite_master WHERE type='table';" > /dev/null; then
            echo "SQLite-Datenbank ist gültig";
          else
            echo "Ungültige SQLite-Datenbank";
            exit 1;
          fi

      - name: Abhängigkeiten installieren
        run: npm install

      - name: Datenbank initialisieren
        run: node initializeDatabase.js

      - name: Projekt bauen
        run: npm run build

      - name: Tests ausführen
        run: npm test

      - name: Docker-Image bauen
        run: docker build -t my-image-name .

      # Weitere Schritte wie das Pushen des Docker-Images oder das Deployment können hier hinzugefügt werden
